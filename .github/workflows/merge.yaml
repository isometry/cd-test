name: automerge

permissions:
  contents: write
  pull-requests: write
  statuses: write

on:
  pull_request_review:
    types: [submitted]
  check_run:
    types: [completed]
  check_suite:
    types: [completed]
  deployment_status: ~
  status: ~

concurrency:
  group: automerge

jobs:
  find-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Find matching, mergeable PR
        uses: actions/github-script@v7
        id: find-pr
        with:
          script: |
            console.log(`Triggered by event name: ${context.eventName}`);
            const isPullRequestEvent = ["pull_request", "pull_request_review"].includes(context.eventName);
            const targetBranches = ["staging", "canary", "main"];

            let pr;
            if (isPullRequestEvent) {
              pr = context.payload.pull_request;
            } else {
              const openPRs = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open",
              });
              pr = openPRs.data.find(pr => pr.head.sha == context.sha);
            }
            if (pr) {
              pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
              });
              pr = pr.data;
            } else {
              console.log(`No open PRs found for ${context.sha}`);
              return false;
            }
            console.log(`Found PR: ${pr.url}\nBase ref: ${pr.base.ref}; Head SHA: ${pr.head.sha}; Context SHA: ${context.sha}`);
            console.log(`Rebaseable: ${pr.rebaseable}; Mergeable state: ${pr.mergeable_state}`);
            return (
              targetBranches.includes(pr.base.ref) &&
              pr.rebaseable &&
              // clean: No conflicts, everything good. Merging is allowed (green box).
              // unstable: Failing/pending commit status that is not part of the required status checks. Merging is allowed (yellow box).
              ["clean", "unstable"].includes(pr.mergeable_state)
            ) ? pr : false;
          result-encoding: json
    outputs:
      result: ${{ steps.find-pr.outputs.result }}

  fast-forward-merge:
    needs: find-pr
    if: ${{ fromJSON(needs.find-pr.outputs.result) != false }}
    uses: ./.github/workflows/fast-forward-merge.yaml
    with:
      baseRef: ${{ fromJSON(needs.find-pr.outputs.result).base.ref }}
      headRef: ${{ fromJSON(needs.find-pr.outputs.result).head.ref }}
  request-promotion:
    needs: [find-pr, fast-forward-merge]
    uses: ./.github/workflows/request-promotion.yaml
    with:
      stages: '["develop", "staging:auto", "canary", "main"]'
      source: ${{ fromJSON(needs.find-pr.outputs.result).base.ref }}
